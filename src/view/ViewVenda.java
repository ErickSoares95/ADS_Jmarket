/*
 * ViewVenda.java
 *
 * Created on 2 de Fevereiro de 2008, 00:13
 */
package view;

import jmarketmysql.FabricaDeEntidades;
import controller.ClienteJpaController;
import controller.ProdutoDaVendaJpaController;
import controller.ProdutoJpaController;
import controller.VendaJpaController;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.Produto;
import model.ProdutoDaVenda;
import model.Venda;
import model.Vendas;

/**
 * @author BLSoft www.Blsoft.com.br Venda de software e código fonte
 */
public class ViewVenda extends javax.swing.JFrame {

    private ProdutoJpaController produtoJpaController = new ProdutoJpaController(FabricaDeEntidades.getInstance().getEntityManagerFactory());
    private ProdutoDaVendaJpaController produtoDaVendaJpaController = new ProdutoDaVendaJpaController(FabricaDeEntidades.getInstance().getEntityManagerFactory());
    private ClienteJpaController clienteJpaController = new ClienteJpaController(FabricaDeEntidades.getInstance().getEntityManagerFactory());
    private VendaJpaController vendaJpaController = new VendaJpaController(FabricaDeEntidades.getInstance().getEntityManagerFactory());

    /**
     * Creates new form RegistrarVenda
     */
    public ViewVenda() {
        initComponents();
        listarClientes();
        listarProdutos();
        this.carregarVendas();
        setLocationRelativeTo(null);
        this.desabilitarCampos();
    }

    private void listarProdutos() {
        List<Produto> listaProduto = this.produtoJpaController.findProdutoEntities();
        jcbProdutos.removeAllItems();

        for (Produto p : listaProduto) {
            jcbProdutos.addItem(p);
        }
    }

    private void listarClientes() {
        List<Cliente> listaCliente = this.clienteJpaController.findClienteEntities();
        jcbClientes.removeAllItems();

        for (Cliente p : listaCliente) {
            jcbClientes.addItem(p);
        }
    }

    public void setViewConsultarVendas() {
        this.jTabbedPane1.setSelectedIndex(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        tfQuantidade = new JFormattedTextField(NumberFormat.getNumberInstance());
        jLabel3 = new javax.swing.JLabel();
        btFinalizar = new javax.swing.JButton();
        btIncluirProduto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btCancelar = new javax.swing.JButton();
        tfValorTotal = new JFormattedTextField(NumberFormat.getNumberInstance());
        btRetirar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        tfNumeroVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcbClientes = new javax.swing.JComboBox();
        jcbProdutos = new javax.swing.JComboBox();
        tfDesconto = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        btPesquisar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btCancelar1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbConsultasVendas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Venda");
        setAlwaysOnTop(true);
        setResizable(false);

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(520, 405));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tfQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jPanel1.add(tfQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 58, -1));

        jLabel3.setText("Quant.:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, -1, -1));

        btFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Save.png"))); // NOI18N
        btFinalizar.setText("Salvar");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });
        jPanel1.add(btFinalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, -1, -1));

        btIncluirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Create.png"))); // NOI18N
        btIncluirProduto.setText("Incluir");
        btIncluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirProdutoActionPerformed(evt);
            }
        });
        jPanel1.add(btIncluirProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, -1, -1));

        jLabel1.setText("Cliente:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel2.setText("Produto:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel5.setText("Total:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 310, -1, -1));

        jLabel4.setText("Desconto:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, -1, -1));

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        tfValorTotal.setEditable(false);
        tfValorTotal.setBackground(new java.awt.Color(255, 153, 153));
        tfValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        jPanel1.add(tfValorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 330, 120, -1));

        btRetirar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        btRetirar.setText("Retirar");
        btRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRetirarActionPerformed(evt);
            }
        });
        jPanel1.add(btRetirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Add.png"))); // NOI18N
        jButton3.setText("Novo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, -1, -1));

        tbProdutos.setAutoCreateRowSorter(true);
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód", "Produto", "Valor unit.", "Quantidade", "Valor total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
            tbProdutos.getColumnModel().getColumn(1).setMinWidth(300);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 650, 190));

        tfNumeroVenda.setEditable(false);
        tfNumeroVenda.setBackground(new java.awt.Color(102, 255, 204));
        jPanel1.add(tfNumeroVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 140, -1));

        jLabel6.setText("Nº de venda:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, -1));

        jPanel1.add(jcbClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 480, -1));

        jPanel1.add(jcbProdutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 330, -1));

        tfDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jPanel1.add(tfDesconto, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 100, -1));

        jTabbedPane1.addTab("Cadastro", jPanel1);

        btPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Search.png"))); // NOI18N
        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar1.setText("Cancelar");
        btCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelar1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Pesquisa:");

        tbConsultasVendas.setAutoCreateRowSorter(true);
        tbConsultasVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Cliente", "Data", "Desconto", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbConsultasVendas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbConsultasVendas.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tbConsultasVendas);
        if (tbConsultasVendas.getColumnModel().getColumnCount() > 0) {
            tbConsultasVendas.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/print.png"))); // NOI18N
        jButton1.setText("Imprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btCancelar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPesquisar)
                    .addComponent(jButton1))
                .addGap(306, 306, 306)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(btCancelar1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(69, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(54, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Consulta", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        desabilitarCampos();
    }//GEN-LAST:event_btCancelarActionPerformed

    protected void desabilitarCampos() {
        jcbClientes.setSelectedIndex(0);
        jcbProdutos.setSelectedIndex(0);
        tfNumeroVenda.setText("");
        tfQuantidade.setText("");
        tfDesconto.setText("");
        tfValorTotal.setText("");
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        jcbClientes.setEnabled(false);
        jcbProdutos.setEnabled(false);
        tfQuantidade.setEnabled(false);
        tfDesconto.setEnabled(false);
    }

    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        if (cadastrarVenda()) {
            JOptionPane.showMessageDialog(this, "Venda registrada com sucesso");
            listarClientes();
            listarProdutos();
            this.carregarVendas();
            this.novaVenda();
            this.jTabbedPane1.setSelectedIndex(this.jTabbedPane1.getSelectedIndex() + 1);
        }
    }//GEN-LAST:event_btFinalizarActionPerformed

    private boolean cadastrarVenda() {
        if (tfDesconto.getText().equals("") || tfValorTotal.getText().equals("") || tbProdutos.getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Você deve preencher todos os campos!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
            return false;
        } else {
            int quantidade;
            Venda venda = new Venda();
            Produto produto;
            ProdutoDaVenda produtoDaVenda;
            Cliente cliente = new Cliente();

            //cliente
            cliente = (Cliente) this.jcbClientes.getModel().getSelectedItem();

            //venda
            venda.setClienteId(cliente.getId());
            venda.setDataVenda(new Date());
            venda.setValorTotal(Float.parseFloat(this.tfValorTotal.getText()));
            venda.setDesconto(Float.parseFloat(this.tfDesconto.getText()));

            //salva a venda
            this.vendaJpaController.create(venda);

            if (venda.getId() > 0) {

                //salvo os itens da venda
                int cont = tbProdutos.getRowCount();
                for (int i = 0; i < cont; i++) {
                    produto = new Produto();
                    produtoDaVenda = new ProdutoDaVenda();

                    //produto da venda
                    produtoDaVenda.setIdProduto(Long.parseLong(String.valueOf(tbProdutos.getValueAt(i, 0))));
                    produtoDaVenda.setIdVenda(venda.getId());
                    quantidade = Integer.parseInt(String.valueOf(tbProdutos.getValueAt(i, 3)));
                    produtoDaVenda.setQuantidade(quantidade);

                    this.produtoDaVendaJpaController.create(produtoDaVenda);

                    if (produtoDaVenda.getId() > 0) {

                        //baixa no estoque
                        produto = this.produtoJpaController.findProduto((Long) tbProdutos.getValueAt(i, 0));
                        produto.setEstoque(produtoJpaController.calcularNovoEstoque(quantidade, produto.getEstoque()));

                        try {
                            this.produtoJpaController.edit(produto);
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Erro ao dar baixa no estoque do produto " + produto.getNome());
                            return false;
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao salvar item da venda");
                        return false;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar venda");
                return false;
            }
        }
        return true;
    }

    private void btIncluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirProdutoActionPerformed
        this.incluirProduto();
        this.tfValorTotal.setText(String.valueOf(this.somaEAtualizaValorTotal()));
    }//GEN-LAST:event_btIncluirProdutoActionPerformed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
//        pesquisarVendas();
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int linha = tbConsultasVendas.getSelectedRow();
        Long codigo = (Long) tbConsultasVendas.getValueAt(linha, 0);

        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro:?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {

            try {
                this.vendaJpaController.destroy(codigo);
                JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                this.carregarVendas();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir registro!");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelar1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.novaVenda();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRetirarActionPerformed
        // para excluir a linha
        int linhaSelecionada = tbProdutos.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            return;
        } else {
            // Obtem o modelo da JTable
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            // Remove a linha
            modelo.removeRow(linhaSelecionada);
        }
    }//GEN-LAST:event_btRetirarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int linha = tbConsultasVendas.getSelectedRow();
        Long codigo = (Long) tbConsultasVendas.getValueAt(linha, 0);
        this.vendaJpaController.gerarRelatorioVenda(codigo);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void novaVenda() {
        tfNumeroVenda.setText("Novo");
        tfQuantidade.setText("");
        listarClientes();
        listarProdutos();
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        this.tfDesconto.setText("0");
        habilitarCampos();
    }

    private void habilitarCampos() {
        jcbClientes.setEnabled(true);
        jcbProdutos.setEnabled(true);
        tfQuantidade.setEnabled(true);
        tfDesconto.setEnabled(true);
    }

    private void incluirProduto() {
        // TODO add your handling code here:
        if (tfQuantidade.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Você deve informar a quantidade para adicionar!");
        } else {
            //Adiciona linhas na tabela
            int quantidade = Integer.parseInt(tfQuantidade.getText());
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();

            Produto produto = new Produto();
            produto = (Produto) this.jcbProdutos.getModel().getSelectedItem();

            modelo.addRow(new Object[]{
                produto.getId(),
                produto.getNome(),
                produto.getValor(),
                this.tfQuantidade.getText(),
                this.produtoJpaController.calcularValorTotal(quantidade, produto.getValor())});
        }
    }

    /**
     * Soma e atualiza os valores total
     *
     * @return
     */
    private double somaEAtualizaValorTotal() {
        double soma = 0;
        double valor = 0;
        int cont = tbProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = Double.parseDouble(String.valueOf(tbProdutos.getValueAt(i, 4)));
            soma = valor + soma;
        }
        return soma;
    }

    private void carregarVendas() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        List<Venda> listaVenda = this.vendaJpaController.findVendaEntities();
        Cliente cliente;

        DefaultTableModel modelo = (DefaultTableModel) tbConsultasVendas.getModel();
        modelo.setNumRows(0);

        //CARREGA OS DADOS DA LISTA NA TABELA
        for (Venda v : listaVenda) {

            //recupera os clientes
            cliente = this.clienteJpaController.findCliente(v.getClienteId());

            modelo.addRow(new Object[]{
                v.getId(),
                cliente.getNome(),
                sdf.format(v.getDataVenda()),
                v.getDesconto(),
                v.getValorTotal()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btIncluirProduto;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btRetirar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox jcbClientes;
    private javax.swing.JComboBox jcbProdutos;
    private javax.swing.JTable tbConsultasVendas;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JFormattedTextField tfDesconto;
    private javax.swing.JTextField tfNumeroVenda;
    private javax.swing.JFormattedTextField tfQuantidade;
    private javax.swing.JFormattedTextField tfValorTotal;
    // End of variables declaration//GEN-END:variables

}
